{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["/**\r\n * Created by zhangzm on 2016-6-8.\r\n */\r\nconst superagent = require('superagent'),\r\n    cheerio = require('cheerio'),\r\n    EventProxy = require('eventproxy'),\r\n    async = require('async'),\r\n    fs = require('fs'),\r\n    proxy = 'http://127.0.0.1:5656',\r\n    _ = require('underscore'),\r\n    DOMParser = require('xmldom').DOMParser;\r\nlet pageInfo = {};\r\nlet pages = [];\r\nlet articles = [];\r\nlet ep = new EventProxy();\r\n\r\nrequire('superagent-proxy')(superagent);\r\n\r\nfunction spideSite(url) {\r\n    getPageInfo(url);\r\n    return new Promise((resolve, reject) => {\r\n\r\n    });\r\n}\r\n/**\r\n * 获取网站目前总页数\r\n * @param url\r\n */\r\nfunction getPageInfo(url) {\r\n    superagent.get(url)\r\n        .end((err, res) => {\r\n            assert.equal(err, null);\r\n            let $ = cheerio.load(res.text);\r\n            let pageDom = $('.pagination').find('a').last().attr('href');\r\n            pageInfo.pageCount = parseInt(pageDom.split('page=')[1]) - 1;\r\n            makePageArray();\r\n            getArticles();\r\n        });\r\n}\r\n\r\n/**\r\n * 制作要获取的页面url数组\r\n */\r\nfunction makePageArray() {\r\n    for (let i = 0; i < pageInfo.pmpageCount; i++) {\r\n        pages.push('https://cnodejs.org/?tab=all&page=' + i);\r\n    }\r\n}\r\n\r\n/**\r\n * 获取所有的文章信息，包括文章名，作者以及文章链接\r\n */\r\nfunction getArticles() {\r\n    console.log(pages.length);\r\n    let atime = new Date().getTime();\r\n    let startTime = atime;\r\n    async.mapLimit(pages, 10, (item, callback) => {\r\n        let btime = new Date().getTime();\r\n        console.log(btime - atime + '   ' + item);\r\n        atime = btime;\r\n        getArticle(item, callback);\r\n    }, (err, results) => {\r\n        let insertTime = new Date().getTime();\r\n        console.log('all spide used time = '+ (insertTime - startTime) + 'ms');\r\n        insertMany({\r\n            doc: 'spider',\r\n            data: articles\r\n        }, function (err, result) {\r\n            console.log('all insert used time = '+ (new Date().getTime() - insertTime) + 'ms');\r\n            makeRssXmlFile();\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * 根据文章URL抓取数据，解析数据，获取url,author\r\n * @param url\r\n * @param callback\r\n */\r\nfunction  getArticle(url, callback) {\r\n    superagent.get(url)\r\n        .end((err, res) => {\r\n            let errorMessage = 'sorry, i am really stupid, error happened! please try again. o(╥﹏╥)o';\r\n            if (!!err) {\r\n                callback(err, url);\r\n            }\r\n\r\n            try {\r\n                let $ = cheerio.load(res.text);\r\n                let list = $('#topic_list .topic_title');\r\n                for (let i = 0; i < list.length; i++) {\r\n                    let _item = $(list[i]);\r\n                    let _temp = {\r\n                        title: _item.attr('title'),\r\n                        href: 'https://cnodejs.org' + _item.attr('href'),\r\n                        author: _item.parents('.cell').find('.user_avatar').attr('href').substr(6)\r\n                    };\r\n                    articles.push(_temp);\r\n                }\r\n            } catch (e) {\r\n                console.log(e);\r\n            } finally {\r\n                callback(null, url);\r\n            }\r\n        });\r\n}\r\n\r\nfunction makeRssXmlFile() {\r\n    let xml = new DOMParser().parseFromString(\r\n        '<?xml version=\"1.0\" encoding=\"UTF-8\" ?>' +\r\n        '<rss version=\"2.0\">' +\r\n            '<channel>' +\r\n            '</channel>' +\r\n        '</rss>'\r\n        ,'text/xml');\r\n    let channel = xml.getElementsByTagName('channel')[0];\r\n    let startTime = new Date().getTime();\r\n    for (let i = 0; i < articles.length; i++) {\r\n        let item = xml.createElement('item');\r\n        let title = xml.createElement('title');\r\n        title.textContent = articles[i].title;\r\n        let link = xml.createElement('link');\r\n        link.textContent = articles[i].href;\r\n        let des = xml.createElement('description');\r\n        des.textContent = articles[i].author;\r\n        item.appendChild(title);\r\n        item.appendChild(link);\r\n        item.appendChild(des);\r\n        channel.appendChild(item);\r\n    }\r\n    fs.writeFile('rss.xml', xml, 'utf8', (err) => {\r\n        if(!err) {\r\n            console.log('file saved!');\r\n        }\r\n    });\r\n    console.log('used time ' + (new Date().getTime() - startTime));\r\n}\r\n\r\n/*===============================================lewen8小说分割线 start============================================*/\r\n\r\n/**\r\n * 从目录页获取到的数据生成每一章的访问url\r\n * @param $\r\n * @param chapterlist\r\n * @returns {Array}\r\n */\r\nfunction makeNovelPageArray($, chapterlist) {\r\n    let novelList = [];\r\n    for (let i = 0; i < chapterlist.length; i++) {\r\n        let pages = chapterlist[i].children;\r\n        for (let j = 0; j < pages.length; j++) {\r\n            let tempPage = pages[j];\r\n            let _href = null;\r\n            if (tempPage.type == 'tag' && tempPage.name == 'p') {\r\n                let _href = 'http://m.lewen8.com' + $(tempPage).find('a').attr('href');\r\n                novelList.push(_href);\r\n            }\r\n        }\r\n    }\r\n    return novelList;\r\n}\r\n\r\n/**\r\n * 获取页面中的title与content生成小说每一章的名字与正文\r\n * @param url\r\n * @param contentArray\r\n * @param index\r\n * @param callback\r\n * @param count\r\n */\r\nfunction  getNovel(url, contentArray, index, callback, count) {\r\n    superagent.get(url)\r\n        .proxy(proxy)\r\n        .end( (err, res) => {\r\n            count++;\r\n            if (err) {\r\n                if (count === 10) return;\r\n                getNovel(url, contentArray, index, callback)\r\n                return;\r\n            }\r\n            try {\r\n                let $ = cheerio.load(res.text);\r\n                let title = $(\"#top\").find(\"span\").text();\r\n                let dom = cheerio.load('<div></div><h2 class=\"title\"></h2><div class=\"content\"></div></div>')\r\n                dom('h2.title').text(title);\r\n                let content = $('#chaptercontent').html();\r\n                content = cheerio.load(content);\r\n                content('p').remove();\r\n                dom('div.content').append(content.html());\r\n                contentArray.push({\r\n                    index: index,\r\n                    content: dom.html()\r\n                });\r\n            } catch (e) {\r\n                console.error(e);\r\n            } finally {\r\n                callback(null, url);\r\n            }\r\n        } )\r\n}\r\n\r\n/**\r\n * 将获取到的所有字符排序，然后连接生成HTML字符串\r\n * @param cArray\r\n * @returns {string}\r\n */\r\nfunction makeHtmlContent(cArray) {\r\n    cArray = _.sortBy(cArray, 'index');\r\n    let content = '';\r\n    for ( let i = 0; i < cArray.length; i++) {\r\n        content += cArray[i].content;\r\n    }\r\n    return content;\r\n}\r\n\r\n/**\r\n * 用异步调用方式获取每一页的标题与数据\r\n * @param chapterlist\r\n * @param resolve\r\n * @param reject\r\n */\r\nfunction  getNoveText(chapterlist, resolve, reject) {\r\n    let index = 0;\r\n    let contentArray = [];\r\n    let atime = new Date().getTime();\r\n    let startTime = atime;\r\n    async.mapLimit(chapterlist, 10, (item, callback) => {\r\n        let btime = new Date().getTime();\r\n        console.log(btime - atime + '   ' + item);\r\n        atime = btime;\r\n        getNovel(item, contentArray, index++, callback, 0);\r\n    }, (err, results) => {\r\n        let insertTime = new Date().getTime();\r\n        console.log('抓取这小说一共用了 '+ (insertTime - startTime) + ' 毫秒');\r\n        resolve(makeHtmlContent(contentArray));\r\n    });\r\n}\r\n\r\n/**\r\n * 从目录页获取章节列表\r\n * @param url\r\n * @returns {Promise}\r\n */\r\nfunction getNovelPageList(url) {\r\n    return new Promise((resolve, reject) => {\r\n        superagent.get(url)\r\n            .proxy(proxy)\r\n            .end((err, res) => {\r\n                assert.equal(err, null);\r\n                let $ = cheerio.load(res.text);\r\n                let chapterlist = $('.chapterlist');\r\n                let novelArray = makeNovelPageArray($, chapterlist);\r\n                getNoveText(novelArray, resolve, reject);\r\n\r\n            });\r\n    });\r\n}\r\n\r\n\r\n/*================================================小说分割线 end=================================================*/\r\n\r\n\r\nmodule.exports = {\r\n    spideSite,\r\n    getNovelPageList\r\n};\r\n\r\nmakeRssXmlFile();"]}